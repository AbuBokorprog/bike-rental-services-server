"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.updateBikeValidationSchema = exports.createBikeValidationSchema = void 0;
const zod_1 = require("zod");
exports.createBikeValidationSchema = zod_1.z.object({
    name: zod_1.z.string(),
    description: zod_1.z.string(),
    pricePerHour: zod_1.z.number(),
    isAvailable: zod_1.z.boolean().default(true),
    cc: zod_1.z.number(),
    year: zod_1.z.number(),
    model: zod_1.z.string(),
    brand: zod_1.z.string(),
    ageGroup: zod_1.z.string().array(),
    brakeType: zod_1.z.string(),
    color: zod_1.z.string(),
    images: zod_1.z.string().array(),
    gearCount: zod_1.z.number(),
    material: zod_1.z.string(),
    rentalRate: zod_1.z.number().optional(),
    size: zod_1.z.string(),
    suspension: zod_1.z.string(),
    type: zod_1.z.string(),
    weight: zod_1.z.number(),
});
exports.updateBikeValidationSchema = zod_1.z.object({
    name: zod_1.z.string().optional(),
    description: zod_1.z.string().optional(),
    pricePerHour: zod_1.z.number().optional(),
    isAvailable: zod_1.z.boolean().default(true).optional(),
    cc: zod_1.z.number().optional(),
    year: zod_1.z.number().optional(),
    model: zod_1.z.string().optional(),
    brand: zod_1.z.string().optional(),
    ageGroup: zod_1.z.string().array().optional(),
    brakeType: zod_1.z.string().optional(),
    color: zod_1.z.string().optional(),
    images: zod_1.z.string().array().optional(),
    gearCount: zod_1.z.number().optional(),
    material: zod_1.z.string().optional(),
    rentalRate: zod_1.z.number().optional(),
    size: zod_1.z.string().optional(),
    suspension: zod_1.z.string().optional(),
    type: zod_1.z.string().optional(),
    weight: zod_1.z.number().optional(),
});
