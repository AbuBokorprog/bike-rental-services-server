import { z } from 'zod';

export const createBikeValidationSchema = z.object({
  name: z.string(),
  description: z.string(),
  pricePerHour: z.number(),
  isAvailable: z.boolean().default(true),
  cc: z.number(),
  brand: z.string(),
  model: z.string(),
  type: z.enum(['mountain', 'road', 'hybrid', 'electric']),
  size: z.string(),
  availabilityStatus: z.boolean().default(true),
  imageUrl: z.string().optional(),
  engine: z.string().optional(),
  carburetionType: z.string().optional(),
  engineType: z.string().optional(),
  emissionControl: z.string().optional(),
  boreStroke: z.string().optional(),
  compressionRatio: z.string().optional(),
  identification: z.string().optional(),
  warranty: z.string().optional(),
  introductionYear: z.string().optional(),
  registrationYear: z.string().optional(),
  minimumAge: z.number().optional(),
  maximumSpeed: z.string().optional(),
  suspensionFrontType: z.string().optional(),
  suspensionFrontSize: z.string().optional(),
  frontTravel: z.string().optional(),
  suspensionRearType: z.string().optional(),
  rearTravel: z.string().optional(),
  brakeFrontType: z.string().optional(),
  brakeFrontDiameter: z.string().optional(),
  brakeRearType: z.string().optional(),
  brakeRearDiameter: z.string().optional(),
  transmissionType: z.string().optional(),
  clutchType: z.string().optional(),
  numberOfSpeeds: z.number().optional(),
  primaryDrive: z.string().optional(),
  tractionControl: z.string().optional(),
  frame: z.string().optional(),
  length: z.string().optional(),
  width: z.string().optional(),
  wheelbase: z.string().optional(),
  dryWeight: z.string().optional(),
  wetWeight: z.string().optional(),
  packagingWeight: z.string().optional(),
  packagingDimensions: z.string().optional(),
  gearCount: z.number().optional(),
  brakeType: z.string().optional(),
  suspension: z.enum(['front', 'rear', 'full', 'none']).optional(),
  weight: z.number().optional(),
  material: z.string().optional(),
  accessoriesIncluded: z.array(z.string()).optional(),
  condition: z.string().optional(),
  maintenanceHistory: z.string().optional(),
  location: z.string().optional(),
  ageGroup: z.string().array(),
  color: z.string(),
  images: z.string().array(),
});

export const updateBikeValidationSchema = z.object({
  name: z.string().optional(),
  description: z.string().optional(),
  pricePerHour: z.number().optional(),
  isAvailable: z.boolean().default(true).optional(),
  cc: z.number().optional(),
  brand: z.string().optional(),
  model: z.string().optional(),
  type: z.enum(['mountain', 'road', 'hybrid', 'electric']).optional(),
  size: z.string().optional(),
  availabilityStatus: z.boolean().default(true).optional(),
  imageUrl: z.string().optional(),
  engine: z.string().optional(),
  carburetionType: z.string().optional(),
  engineType: z.string().optional(),
  emissionControl: z.string().optional(),
  boreStroke: z.string().optional(),
  compressionRatio: z.string().optional(),
  identification: z.string().optional(),
  warranty: z.string().optional(),
  introductionYear: z.string().optional(),
  registrationYear: z.string().optional(),
  minimumAge: z.number().optional(),
  maximumSpeed: z.string().optional(),
  suspensionFrontType: z.string().optional(),
  suspensionFrontSize: z.string().optional(),
  frontTravel: z.string().optional(),
  suspensionRearType: z.string().optional(),
  rearTravel: z.string().optional(),
  brakeFrontType: z.string().optional(),
  brakeFrontDiameter: z.string().optional(),
  brakeRearType: z.string().optional(),
  brakeRearDiameter: z.string().optional(),
  transmissionType: z.string().optional(),
  clutchType: z.string().optional(),
  numberOfSpeeds: z.number().optional(),
  primaryDrive: z.string().optional(),
  tractionControl: z.string().optional(),
  frame: z.string().optional(),
  length: z.string().optional(),
  width: z.string().optional(),
  wheelbase: z.string().optional(),
  dryWeight: z.string().optional(),
  wetWeight: z.string().optional(),
  packagingWeight: z.string().optional(),
  packagingDimensions: z.string().optional(),
  gearCount: z.number().optional(),
  brakeType: z.string().optional(),
  suspension: z.enum(['front', 'rear', 'full', 'none']).optional(),
  weight: z.number().optional(),
  material: z.string().optional(),
  accessoriesIncluded: z.array(z.string()).optional(),
  condition: z.string().optional(),
  maintenanceHistory: z.string().optional(),
  location: z.string().optional(),
  ageGroup: z.string().array(),
  color: z.string(),
  images: z.string().array(),
});
